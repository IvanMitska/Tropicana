'use client';

import { useState } from 'react';

export default function QuickAdminSetup() {
  const [step, setStep] = useState(1);
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<any>(null);

  const createAdmin = async () => {
    setIsLoading(true);
    try {
      const response = await fetch('/api/admin/setup', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ setupKey: 'setup-admin-2024' }),
      });
      
      const data = await response.json();
      setResult(data);
      setStep(3);
    } catch (error) {
      console.error(error);
      setStep(2);
    } finally {
      setIsLoading(false);
    }
  };

  if (step === 1) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
        <div className="bg-white rounded-xl shadow-lg p-8 max-w-md w-full">
          <div className="text-center">
            <div className="text-6xl mb-4">üîß</div>
            <h1 className="text-2xl font-bold mb-4">–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</h1>
            <p className="text-gray-600 mb-6">
              –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–æ–º
            </p>
            <button
              onClick={createAdmin}
              disabled={isLoading}
              className="w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors"
            >
              {isLoading ? '–°–æ–∑–¥–∞–µ–º...' : '–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'}
            </button>
          </div>
        </div>
      </div>
    );
  }

  if (step === 2) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 to-pink-100 flex items-center justify-center p-4">
        <div className="bg-white rounded-xl shadow-lg p-8 max-w-md w-full">
          <div className="text-center">
            <div className="text-6xl mb-4">‚ùå</div>
            <h1 className="text-2xl font-bold mb-4">–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h1>
            <p className="text-gray-600 mb-6">
              –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å MongoDB.
            </p>
            <div className="text-left space-y-3 text-sm">
              <p><strong>–†–µ—à–µ–Ω–∏—è:</strong></p>
              <p>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MongoDB –ª–æ–∫–∞–ª—å–Ω–æ</p>
              <p>2. –°–æ–∑–¥–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –±–∞–∑—É –Ω–∞ MongoDB Atlas</p>
              <p>3. –û–±–Ω–æ–≤–∏—Ç—å MONGODB_URI –≤ .env —Ñ–∞–π–ª–µ</p>
            </div>
            <button
              onClick={() => setStep(1)}
              className="mt-6 w-full bg-red-600 text-white py-3 px-4 rounded-lg hover:bg-red-700 transition-colors"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100 flex items-center justify-center p-4">
      <div className="bg-white rounded-xl shadow-lg p-8 max-w-md w-full">
        <div className="text-center">
          <div className="text-6xl mb-4">‚úÖ</div>
          <h1 className="text-2xl font-bold mb-4">–ì–æ—Ç–æ–≤–æ!</h1>
          {result && (
            <div className="bg-green-50 p-4 rounded-lg mb-6 text-left">
              <p className="font-medium">{result.message}</p>
              <div className="mt-2 text-sm space-y-1">
                <p><strong>Email:</strong> {result.credentials?.email}</p>
                <p><strong>–ü–∞—Ä–æ–ª—å:</strong> {result.credentials?.password}</p>
              </div>
            </div>
          )}
          <a
            href="/admin/login"
            className="w-full bg-green-600 text-white py-3 px-4 rounded-lg hover:bg-green-700 transition-colors inline-block"
          >
            –í–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
          </a>
        </div>
      </div>
    </div>
  );
}